name: Python tests, package build and publish on release

env:
  # Set to avoid errors when building FFTW with CMake v4+
  # https://github.com/FFTW/fftw3/issues/381
  CMAKE_POLICY_VERSION_MINIMUM: 3.5

on:
  push:
    branches: ["main"]
  pull_request:
  release:
    types:
      - published

jobs:
  tests:
    name: Run tests on ${{matrix.os}} / Python ${{matrix.python-version}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
      - name: Install so3
        run: pip install ".[dev]"
      - name: run pytest
        run: pytest tests/


  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Upgrade pip and install build
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: pkg-sdist
          path: dist/*.tar.gz


  build-wheels:
    name: Build wheels on ${{matrix.os}} / Python ${{matrix.python-version}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        name: Set up Python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip and install build
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build sdist
        run: python -m build --wheel
      - uses: actions/upload-artifact@v4
        with:
          name: pkg-wheel-${{matrix.os}}-python-${{matrix.python-version}}
          path: dist/*.whl

  publish:
    name: Publish to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    steps:
      - name: Download wheels and sdist
        uses: actions/download-artifact@v4
        with:
          pattern: pkg-*
          path: dist
          merge-multiple: true
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
